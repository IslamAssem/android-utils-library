/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.activity = '1.0.0-rc01'
versions.android_gradle_plugin = '3.4.0'
versions.apache_commons = "2.5"
versions.appcompat = "1.2.0"
versions.annotations = "1.1.0"
versions.arch_core = "2.0.1"
versions.atsl_core = "1.2.0"
versions.atsl_junit = "1.1.1"
versions.atsl_rules = "1.2.0"
versions.atsl_runner = "1.2.0"
versions.benchmark = "1.0.0-rc01"
versions.constraint_layout = "2.0.0-alpha2"
versions.core_ktx = "1.3.2"
versions.activity_ktx = "1.2.0"
versions.dagger = "2.25.2"
versions.hilt = "2.28-alpha"
versions.multiDex = "2.0.1"
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.fragment = "1.2.0-alpha02"
//versions.glide = "4.11.0"
versions.glide = "4.12.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.kotlin = "1.4.21"
versions.lifecycle = "2.2.0-alpha03"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.navigation = "2.3.2"
versions.okhttp_logging_interceptor = "4.2.2"
versions.paging = "2.1.0"
versions.retrofit = "2.6.2"
versions.robolectric = "4.2"
//versions.room = "2.2.5"
versions.room = "2.3.0-alpha01"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.coroutines = "1.4.2"
versions.support = "1.0.0"
versions.recyclerView = "1.1.0"
versions.cardView = "1.0.0"
versions.material = "1.2.1"
versions.timber = "4.5.1"
versions.work = "2.1.0"
versions.butterknif = "10.2.0"
versions.preferences_version = "1.1.1"
ext.versions = versions

def deps = [:]
deps.benchmark = "androidx.benchmark:benchmark-junit4:$versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$versions.benchmark"

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.annotations"
support.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"
// Java language implementation
support.preferences = "androidx.preference:preference:$versions.preferences_version"
// Kotlin
support.preferences_ktx = "androidx.preference:preference-ktx:$versions.preferences_version"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
support.cardview = "androidx.cardview:cardview:$versions.cardView"
support.viewpager = "androidx.viewpager:viewpager:$versions.support"
support.design = "com.google.android.material:material:$versions.material"
support.core_v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.activity_ktx = "androidx.activity:activity-ktx:$versions.activity_ktx"
support.fragment_runtime = "androidx.fragment:fragment:${versions.fragment}"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
support.fragment_testing = "androidx.fragment:fragment-testing:${versions.fragment}"
support.multi_dex = "androidx.multidex:multidex:${versions.multiDex}"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.room_ktx = "androidx.room:room-ktx:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
deps.coroutines = coroutines
def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$versions.activity"
deps.activity = activity

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
def okhttp = [:]
okhttp.okhttp = "com.squareup.okhttp3:okhttp:${versions.okhttp_logging_interceptor}"
okhttp.interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
okhttp.urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:${versions.okhttp_logging_interceptor}"
deps.okhttp = okhttp

def squareup = [:]
squareup.picasso = "com.squareup.picasso:picasso:2.71828"
squareup.retrofit2 = "com.squareup.retrofit2:retrofit:2.6.2"
squareup.rx = "com.squareup.retrofit2:adapter-rxjava2:2.6.2"
squareup.googlegson = "com.google.code.gson:gson:2.8.6"
squareup.converter = "com.squareup.retrofit2:converter-gson:2.6.2"
squareup.okhttp = "com.squareup.okhttp3:okhttp:4.2.2"
squareup.interceptor = "com.squareup.okhttp3:logging-interceptor:4.2.2"
squareup.urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:4.2.2"
deps.squareup = squareup


def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger


def hilt = [:]
hilt.classpath = "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
hilt.android = "com.google.dagger:hilt-android:$versions.hilt"
hilt.compiler = "com.google.dagger:hilt-android-compiler:2.31.2-alpha"
deps.hilt = hilt

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def butterknif = [:]
butterknif.runtime = "com.jakewharton:butterknife:$versions.butterknif"
butterknif.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknif"
deps.butterknif = butterknif
def atsl = [:]
atsl.core = "androidx.test:core:$versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"

deps.kotlin = kotlin

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 14
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://jitpack.io' }
    handler.maven {url  "http://dl.bintray.com/lukaville/maven"}
    handler.maven { url 'https://kotlin.bintray.com/kotlinx/' }
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}
ext.addRepos = this.&addRepos